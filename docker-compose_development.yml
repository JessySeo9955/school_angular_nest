
services:
  db:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres  # Set the database password
      POSTGRES_DB: mydb
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist data in a named volume
      - ./postgres/ddl.sql:/docker-entrypoint-initdb.d/ddl.sql  # DDL SQL initialization file
      - ./postgres/dml.sql:/docker-entrypoint-initdb.d/dml.sql  # DML SQL initialization file
    ports:
      - "5432:5432"  # Expose port 5432 for PostgreSQL

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    ports:
      - '5050:80'
    depends_on:
      - db

  # Backend service (NestJS)
  backend:
    build:
      context: ./back-end/school
      dockerfile: Dockerfile
      args:
        TARGET: development
    container_name: nestjs-backend
    ports:
      - "3000:3000"  # Expose port 3000 for accessing the backend
    environment:
      - NODE_ENV=development  # Set the environment to development
    volumes:
      - ./back-end/school:/src  # Sync the local front-end folder to /app in the container
      - /src/node_modules
    command: "npm run start:watch"  # Run the application in development mode
    depends_on:
      - db

  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
      args:
        TARGET: development
    container_name: angular
    ports:
      - "4200:4200"
    volumes:
      - ./front-end:/src  # Sync the local front-end folder to /app in the container
      - /src/node_modules
    environment:
      - NODE_ENV=development  # Set the environment to development
    command: "npm run start:watch"


# Named volumes to persist PostgreSQL data
volumes:
  pgdata:
  ignore:
