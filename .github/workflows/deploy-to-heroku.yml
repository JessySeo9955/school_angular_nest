name: Deploy Docker Images to Heroku

on:
  workflow_run:
    workflows: ["Docker Build and Push"]  # This should be the name of your first workflow
    types:
      - completed  # Trigger when the first workflow is completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Heroku CLI # <- IMPORTANT!!! Make sure the cli is installed before using the action
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
      - uses: akhileshns/heroku-deploy@v3.14.15 # This is the action
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "school-enrollment" #Must be unique in Heroku
          heroku_email: ${{ vars.EMAIL }}

      # Step 4: Login to Heroku Container Registry
      - name: Login to Heroku Container Registry
        run: |
          heroku container:login

      # Step 5: Pull Docker images from Docker Hub
      - name: Pull Docker images from Docker Hub
        run: |
          docker pull ${{ vars.DOCKERHUB_USERNAME }}/school_nest:latest

      # Step 6: Tag the Docker images for Heroku
      - name: Tag Docker images for Heroku
        run: |
          docker tag ${{ vars.DOCKERHUB_USERNAME }}/school_nest:latest registry.heroku.com/school-enrollment/web

      # Step 7: Push Docker images to Heroku Container Registry
      - name: Push Docker images to Heroku
        run: |
          docker push registry.heroku.com/school-enrollment/web

      # Optional: Wait for Heroku to be ready
      - name: Wait for Heroku to be ready
        run: sleep 10  # Wait for 10 seconds before releasing

      # Step 8: Release the app on Heroku
      - name: Release app on Heroku
        run: |
          heroku container:release web --app school-enrollment

      # Optional: Clean up Docker images
      - name: Clean up Docker images
        run: |
          docker rmi ${{ vars.DOCKERHUB_USERNAME }}/school_nest:latest
